@precedence { first @right, second @left }

@top Program { expression* }

@skip { space | BlockComment }

expression {

    Semi |
    Comma |
    Assignment |
    AngleBracketOpen |
    Number |
    Placeholder |
    VariableName  |
    Expression { OpcodeOpening expression* ParenClose }

}

OpcodeOpening {
    Opcode | 
    OpcodeWithOperandOpening { OpcodeWithOperand expression* AngleBracketClose ParenOpen } 
}

@local tokens {
    blockCommentEnd { "*/" }
    blockCommentNewline { "\n" | "\r" | "\r\n" }
    @else blockCommentContent
}

@skip {} {
    BlockComment { "/*" (blockCommentContent | blockCommentNewline)* blockCommentEnd }
}

@tokens {

    Placeholder { "_" }

    word { @asciiLetter+ ( @asciiLetter | @digit | "-" )* }

    Opcode { word ParenOpen }

    OpcodeWithOperand { word AngleBracketOpen }

    VariableName { word }

    Number {
      @digit |
      "0x" $[a-fA-F0-9]+ |
      "0b" $[01]+ |
      $[1-9] (@digit)* "e" (@digit)+
    }

    AngleBracketOpen { "<" }

    AngleBracketClose { ">" }

    ParenOpen { "(" }

    ParenClose { ")" }

    Comma { "," }

    Semi { ";" }

    Assignment { ":" }

    space { $[ \t\n\r]+ }

    @precedence { Opcode, VariableName }

    @precedence { OpcodeWithOperand, VariableName }
   
}

@detectDelim